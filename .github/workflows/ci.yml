name: Continuous integration

run-name: "CI run '${{ github.head_ref || github.ref_name }}'"

on:
  workflow_dispatch:
  push:
    branches:
      - trunk
  pull_request:
  merge_group:

concurrency:
  # Use github.run_id on trunk branch
  # Use github.event.pull_request.number on pull requests, so it's unique per pull request
  # Use github.ref on other branches, so it's unique per branch
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/trunk' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  format:
    name: Check format
    runs-on: ubuntu-latest
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/trunk' }}

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Check format
        run: cargo make ci-cargo-fmt
  check:
    name: Check workspace
    runs-on: ubuntu-latest
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/trunk' }}

      - name: Install dependencies
        run: |
          sudo apt-get -y update

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Check workspace
        run: cargo make ci-cargo-check

  clippy:
    name: Check clippy
    runs-on: [ runner-arm64-large ]
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/trunk' }}

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Run clippy
        run: cargo make ci-cargo-clippy

  test:
    name: Test workspace
    runs-on: [ runner-arm64-large ]
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/trunk' }}

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Run clippy
        run: cargo make ci-cargo-test